@{
    ViewData["Title"] = "Consulta de Cuentas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <h2 class="mb-4">Consultar Cuentas por Cobrar</h2>

    <div class="mb-3">
        <input type="text" id="filtroCliente" class="form-control" placeholder="Filtrar por cliente (nombre o ID)" />
    </div>

    <table class="table table-striped table-bordered mt-3" id="tablaCuentas">
        <thead>
            <tr>
                <th>ID</th>
                <th>Cliente</th>
                <th>ID Factura</th>
                <th>Fecha</th>
                <th>Hora</th>
                <th>Monto</th>
                <th>Estado</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

<script>
    let cuentas = [];

    async function cargarCuentas() {
        try {
            const res = await fetch("/api/cuentasporcobrar");
            cuentas = await res.json();
            console.log(cuentas);
            mostrarCuentas(cuentas);
        } catch (error) {
            console.error("Error al cargar cuentas:", error);
        }
    }

    function formatearHora12(hora24) {
        if (!hora24) return "";
        const [hora, minutos] = hora24.split(":");
        const h = parseInt(hora);
        const ampm = h >= 12 ? "PM" : "AM";
        const h12 = h % 12 || 12;
        return `${h12}:${minutos} ${ampm}`;
    }

    function mostrarCuentas(data) {
        const tbody = document.querySelector("#tablaCuentas tbody");
        tbody.innerHTML = "";

        data.forEach(f => {
            const fila = `
                    <tr>
                        <td>${f.cxCID || ""}</td>
                        <td>${f.clienteNombre || ""} (ID: ${f.clienteID || ""})</td>
                        <td>${f.facturaID || ""}</td>
                        <td>${f.fecha || ""}</td>
                        <td>${formatearHora12(f.hora) || ""}</td>
                        <td>RD$ ${f.monto?.toFixed(2) || "0.00"}</td>
                        <td><span class="badge bg-${f.estado === 'Pendiente' ? 'warning' : 'success'}">${f.estado}</span></td>
                    </tr>`;
            tbody.innerHTML += fila;
        });
    }

    document.getElementById("filtroCliente").addEventListener("input", function () {
        const filtro = this.value.toLowerCase();

        const filtrado = cuentas.filter(c =>
            (c.clienteNombre && c.clienteNombre.toLowerCase().includes(filtro)) ||
            (c.clienteID && c.clienteID.toString().includes(filtro))
        );

        mostrarCuentas(filtrado);
    });

    cargarCuentas();
</script>